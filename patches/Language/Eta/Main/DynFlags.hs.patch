13a14
> {-# LANGUAGE NamedFieldPuns #-}
17c18
< module ETA.Main.DynFlags (
---
> module Language.Eta.Main.DynFlags (
75c76
<         pgm_L, pgm_P, pgm_F, pgm_c, pgm_s, pgm_a, pgm_l, pgm_dll,
---
>         pgm_LL, pgm_P, pgm_F, pgm_c, pgm_s, pgm_a, pgm_l, pgm_dll,
78c79
<         opt_L, opt_P, opt_F, opt_c, opt_a, opt_l,
---
>         opt_LL, opt_P, opt_F, opt_c, opt_a, opt_l,
154,155c155,156
<         addJarInputs,
<         compressionMethod
---
>         addJarInputs -- ,
>         -- compressionMethod
160,180c161,181
< import ETA.Utils.Platform
< import ETA.Utils.Metrics
< import ETA.BasicTypes.Module
< import ETA.Main.PackageConfig
< import {-# SOURCE #-} ETA.Main.Hooks
< import {-# SOURCE #-} ETA.Prelude.PrelNames ( mAIN )
< import {-# SOURCE #-} ETA.Main.Packages (PackageState, emptyPackageState)
< import ETA.Main.DriverPhases     ( Phase(..), phaseInputExt )
< import ETA.Main.CmdLineParser
< import ETA.Main.Constants
< import ETA.Utils.Panic
< import ETA.Utils.Util
< import qualified ETA.Utils.Util as Util
< import ETA.Utils.Maybes
< import ETA.Utils.MonadUtils
< import qualified ETA.Utils.Pretty as Pretty
< import ETA.BasicTypes.SrcLoc
< import ETA.Utils.FastString
< import ETA.Utils.Outputable
< import ETA.Utils.JAR
< import qualified ETA.Utils.PprColor as Col
---
> import Language.Eta.Utils.Platform
> import Language.Eta.Utils.Metrics
> import Language.Eta.BasicTypes.Module
> import Language.Eta.Main.PackageConfig
> import {-# SOURCE #-} Language.Eta.Main.Hooks
> import {-# SOURCE #-} Language.Eta.Prelude.PrelNames ( mAIN )
> import {-# SOURCE #-} Language.Eta.Main.Packages (PackageState, emptyPackageState)
> import Language.Eta.Main.DriverPhases     ( Phase(..), phaseInputExt )
> import Language.Eta.Main.CmdLineParser
> import Language.Eta.Main.Constants
> import Language.Eta.Utils.Panic
> import Language.Eta.Utils.Util
> import qualified Language.Eta.Utils.Util as Util
> import Language.Eta.Utils.Maybes
> import Language.Eta.Utils.MonadUtils
> import qualified Language.Eta.Utils.Pretty as Pretty
> import Language.Eta.BasicTypes.SrcLoc
> import Language.Eta.Utils.FastString
> import Language.Eta.Utils.Outputable
> -- import Language.Eta.Utils.JAR
> import qualified Language.Eta.Utils.PprColor as Col
185c186
< import {-# SOURCE #-} ETA.Main.ErrUtils ( Severity(..), MsgDoc, mkLocMessageAnn,
---
> import {-# SOURCE #-} Language.Eta.Main.ErrUtils ( Severity(..), MsgDoc, mkLocMessageAnn,
212c213
< import ETA.SysTools.Terminal
---
> import Language.Eta.SysTools.Terminal
962c963,964
<   sPgm_L                 :: String,
---
>   -- Changed from sPgm_L to sPgm_LL so it differs from sPgm_l in more than case.
>   sPgm_LL                :: String,
978c980,981
<   sOpt_L                 :: [String],
---
>   -- Changed from sOpt_L to sOpt_LL so it differs from sOpt_l in more than case.
>   sOpt_LL                :: [String],
1010,1011c1013,1014
< pgm_L                 :: DynFlags -> String
< pgm_L dflags = sPgm_L (settings dflags)
---
> pgm_LL                 :: DynFlags -> String
> pgm_LL dflags = sPgm_LL (settings dflags)
1041,1042c1044,1046
< opt_L                 :: DynFlags -> [String]
< opt_L dflags = sOpt_L (settings dflags)
---
> -- Changed from opt_L to opt_LL to make it differ from opt_l in more than case.
> opt_LL                 :: DynFlags -> [String]
> opt_LL dflags = sOpt_LL (settings dflags)
2419c2423
<       (hasArg (\f -> alterSettings (\s -> s { sPgm_L   = f})))
---
>       (hasArg (\f -> alterSettings (\s -> s { sPgm_LL   = f})))
2449c2453
<       (hasArg (\f -> alterSettings (\s -> s { sOpt_L   = f : sOpt_L s})))
---
>       (hasArg (\f -> alterSettings (\s -> s { sOpt_LL  = f : sOpt_LL s})))
3978c3982
<       mvar <- liftMaybeT $ try $ getEnv "ETA_ENVIRONMENT"
---
>       mvar <- liftMaybeT $ try $ getEnv "Language.Eta_ENVIRONMENT"
4022c4026
<       ++ " (specified in ETA_ENVIRONMENT) not found"
---
>       ++ " (specified in Language.Eta_ENVIRONMENT) not found"
4305c4309,4312
< GLOBAL_VAR(v_unsafeGlobalDynFlags, panic "v_unsafeGlobalDynFlags: not initialised", DynFlags)
---
> -- GLOBAL_VAR(v_unsafeGlobalDynFlags, panic "v_unsafeGlobalDynFlags: not initialised", DynFlags)
> 
> v_unsafeGlobalDynFlags :: IORef DynFlags
> v_unsafeGlobalDynFlags = error "v_unsafeGlobalDynFlags: not initialized"
4390,4397c4397,4409
< foreign import ccall unsafe "setHeapSize"       setHeapSize       :: Int -> IO ()
< foreign import ccall unsafe "enableTimingStats" enableTimingStats :: IO ()
< 
< compressionMethod :: DynFlags -> CompressionMethod
< compressionMethod dflags
<   | oLevel >= 1 = deflate
<   | otherwise   = normal
<   where oLevel = optLevel dflags
---
> -- foreign import ccall unsafe "setHeapSize"       setHeapSize       :: Int -> IO ()
> setHeapSize :: Int -> IO ()
> setHeapSize = undefined
> 
> -- foreign import ccall unsafe "enableTimingStats" enableTimingStats :: IO ()
> enableTimingStats :: IO ()
> enableTimingStats = undefined
> 
> -- compressionMethod :: DynFlags -> CompressionMethod
> -- compressionMethod dflags
> --   | oLevel >= 1 = deflate
> --   | otherwise   = normal
> --   where oLevel = optLevel dflags
