20c20
< module ETA.TypeCheck.TcType (
---
> module Language.Eta.TypeCheck.TcType (
157,167c157,167
< import ETA.Types.Kind
< import ETA.Types.TypeRep
< import ETA.Types.Class
< import ETA.BasicTypes.Var
< import ETA.Prelude.ForeignCall
< import ETA.BasicTypes.VarSet
< import ETA.Types.Coercion
< import ETA.Types.Type
< import qualified ETA.Types.Type as Type
< import ETA.Types.TyCon
< import ETA.Types.CoAxiom
---
> import Language.Eta.Types.Kind
> import Language.Eta.Types.TypeRep
> import Language.Eta.Types.Class
> import Language.Eta.BasicTypes.Var
> import Language.Eta.Prelude.ForeignCall
> import Language.Eta.BasicTypes.VarSet
> import Language.Eta.Types.Coercion
> import Language.Eta.Types.Type
> import qualified Language.Eta.Types.Type as Type
> import Language.Eta.Types.TyCon
> import Language.Eta.Types.CoAxiom
170,172c170,172
< import ETA.Main.DynFlags
< import ETA.BasicTypes.Name
< import qualified ETA.BasicTypes.Name as Name
---
> import Language.Eta.Main.DynFlags
> import Language.Eta.BasicTypes.Name
> import qualified Language.Eta.BasicTypes.Name as Name
176,187c176,187
< import ETA.BasicTypes.NameSet
< import ETA.BasicTypes.VarEnv
< import ETA.BasicTypes.DataCon
< import ETA.Prelude.PrelNames
< import ETA.Prelude.TysWiredIn
< import ETA.BasicTypes.BasicTypes
< import ETA.Utils.Util
< import ETA.Utils.Maybes
< import ETA.Utils.ListSetOps
< import ETA.Utils.Outputable
< import ETA.Utils.FastString
< import ETA.Main.ErrUtils( Validity(..), isValid )
---
> import Language.Eta.BasicTypes.NameSet
> import Language.Eta.BasicTypes.VarEnv
> import Language.Eta.BasicTypes.DataCon
> import Language.Eta.Prelude.PrelNames
> import Language.Eta.Prelude.TysWiredIn
> import Language.Eta.BasicTypes.BasicTypes
> import Language.Eta.Utils.Util
> import Language.Eta.Utils.Maybes
> import Language.Eta.Utils.ListSetOps
> import Language.Eta.Utils.Outputable
> import Language.Eta.Utils.FastString
> import Language.Eta.Main.ErrUtils( Validity(..), isValid )
