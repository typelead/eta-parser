10c10
< module ETA.BasicTypes.Demand (
---
> module Language.Eta.BasicTypes.Demand (
65,77c65,77
< import ETA.Main.DynFlags
< import ETA.Utils.Outputable
< import ETA.BasicTypes.Var ( Var )
< import ETA.BasicTypes.VarEnv
< import ETA.Utils.UniqFM
< import ETA.Utils.Util
< import ETA.BasicTypes.BasicTypes
< import ETA.Utils.Binary
< import ETA.Utils.Maybes           ( orElse )
< 
< import ETA.Types.Type            ( Type, isUnLiftedType )
< import ETA.Types.TyCon           ( isNewTyCon, isClassTyCon )
< import ETA.BasicTypes.DataCon         ( splitDataProductType_maybe )
---
> import Language.Eta.Main.DynFlags
> import Language.Eta.Utils.Outputable
> import Language.Eta.BasicTypes.Var ( Var )
> import Language.Eta.BasicTypes.VarEnv
> import Language.Eta.Utils.UniqFM
> import Language.Eta.Utils.Util
> import Language.Eta.BasicTypes.BasicTypes
> import Language.Eta.Utils.Binary
> import Language.Eta.Utils.Maybes           ( orElse )
> 
> import Language.Eta.Types.Type            ( Type, isUnLiftedType )
> import Language.Eta.Types.TyCon           ( isNewTyCon, isClassTyCon )
> import Language.Eta.BasicTypes.DataCon         ( splitDataProductType_maybe )
